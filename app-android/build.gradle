//As Per https://developer.android.com/studio/publish/app-signing.html#release-mode
def keyStorePropertiesExists = rootProject.file("keystore.properties").exists()
def keystoreProperties = new Properties()

if (keyStorePropertiesExists) {
    keystoreProperties.load(new FileInputStream(rootProject.file("keystore.properties")))
}

apply plugin: 'com.android.application'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.1'
    }
}

repositories {
    mavenCentral()
    maven {
        url "http://devserver2.ustadmobile.com/repo-mvn"
    }
}

ext.buildConfigProperties = new Properties()
ext.buildConfigProperties.load(new FileInputStream(project.file("buildconfig.default.properties")))
if (project.file("buildconfig.local.properties").exists()) {
    ext.buildConfigProperties.load(new FileInputStream(project.file("buildconfig.local.properties")))
}


android {
    signingConfigs {
        release {
            keyAlias keyStorePropertiesExists ? keystoreProperties['keyAlias'] : "default"
            keyPassword keyStorePropertiesExists ? keystoreProperties['keyPassword'] : "default"
            storeFile keyStorePropertiesExists ? file(keystoreProperties['storeFile']) : new File("keystore.ks")
            storePassword keyStorePropertiesExists ? keystoreProperties['storePassword'] : "default"
        }
    }

    lintOptions {
        abortOnError false
    }

    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.toughra.ustadmobile"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode rootProject.ext.ustadVersionCode
        versionName rootProject.version
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "long", "TIMESTAMP", System.currentTimeMillis() + "L"
    }

    productFlavors {
        /*
         * The localconfig flavor is created based on the buildconfig.local.properties settings
         */
        localconfig {
            applicationId project.ext.buildConfigProperties['android.applicationId']
            versionCode rootProject.ext.ustadVersionCode + Integer.parseInt(rootProject.ext.buildConfigProperties['localVersionCode'])
            manifestPlaceholders = ["appName": rootProject.ext.buildConfigProperties['appName']]
        }

        /*
         * The vanilla config flavor is here for convenience : it's the same as having no
         * buildconfig.local.properties and relying on what's in buildconfig.default.properties
         *
         * It's just here to make life easier so you can switch flavors in Android studio without
         * having to remove the local config files themselves
         */
        vanilla {
            versionCode rootProject.ext.ustadVersionCode
            manifestPlaceholders = ["appName": "Ustad Mobile"]
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

task checkBuildConfig {
    //inputs.files("buildconfig.*.properties")
    inputs.files("buildconfig.default.properties")
    inputs.files("buildconfig.local.properties")
}
assemble.dependsOn(checkBuildConfig)

task copyLocaleFilesFromCore(type: Copy) {
    inputs.files('../core/locale/**/*.properties')
    from('../core/src/main/assets/locale/') {
        include "*.properties"
    }
    into "src/main/assets/locale"
    doLast {
        System.out.println("Update locale files android")
    }

}
assemble.dependsOn(copyLocaleFilesFromCore)

tasks.whenTaskAdded { task ->
    if (task.name == 'assembleLocalconfig' || task.name == 'assembleLocalconfigDebug' || task.name == 'assembleLocalconfigRelease') {
        task.dependsOn copyLocaleFilesFromCore
        task.dependsOn checkBuildConfig
    }
}


dependencies {
    compile project(':core')
    compile project(':sharedse')
    compile project(":ustadmobile-ormlite")
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile "com.ustadmobile.nanolrs:nanolrs-core:$nanoLrsVersion"
    compile "com.ustadmobile.nanolrs:nanolrs-android:$nanoLrsVersion"
    compile 'com.github.clans:fab:1.6.4'
    androidTestCompile project(":core-tests")
    androidTestCompile 'junit:junit:4.12'
    testCompile 'junit:junit:4.12' //testing
    testCompile project(":sharedse-tests") //testing
    androidTestCompile project(":core-tests")
    /*
        compile fileTree(dir: 'libs', include: ['*.jar'])
        androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
            exclude group: 'com.android.support', module: 'support-annotations'
        })
        compile 'com.android.support:appcompat-v7:25.1.0'
        testCompile 'junit:junit:4.12'
        */
    compile 'com.ustadmobile.qrcodelibomrfork:qrcode-core:1.0-SNAPSHOT'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.ustadmobile.nanolrs:nanolrs-core:0.1.47'
    compile 'com.ustadmobile.nanolrs:nanolrs-android:0.1.47'
    compile 'com.github.clans:fab:1.6.4'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha5'
    androidTestCompile 'junit:junit:4.12'
}
